version: "3.4"
services:
  authz:
    container_name: authz-service
    build:
      context: .
      dockerfile: Dockerfile.authz
    expose:
      - 5000
    tty: true
    depends_on:
      - db
    networks:
      app-network:
        ipv4_address: 172.22.0.6
  nginx:
    image: nginx:latest
    container_name: nginx-service
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
      - "443:443"
    restart: always
    depends_on:
      - authz
    networks:
      app-network:
        ipv4_address: 172.22.0.5
    volumes:
      - nginx_log:/var/log/nginx
      - certbot_storage:/etc/letsencrypt:rw
  certbot:
    container_name: certbot-service
    build:
      context: .
      dockerfile: Dockerfile.certbot
    tty: true
    restart: always
    expose:
      - 80
    volumes:
      - certbot_storage:/etc/letsencrypt
      - certbot_log:/var/log/letsencrypt:rw
    depends_on:
      - nginx
    networks:
      app-network:
        ipv4_address: 172.22.0.7
  db:
    image: postgres:latest
    restart: always
    env_file:
      - /etc/PGDATA/db_login.env
    ports:
      - '5432:5432'
    volumes:
      - PGDATA:/var/lib/postgresql/data
    networks:
      app-network:
        ipv4_address: 172.22.0.8
networks:
  app-network:
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/16
          gateway: 172.22.0.1
volumes:
  nginx_log:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /var/log/nginx_logs
  certbot_log:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /var/log/certbot_logs
  certbot_storage:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /etc/letsencrypt
  PGDATA:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /etc/PGDATA