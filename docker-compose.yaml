version: "3.4"
services:
  authz:
    container_name: authz-service
    build:
      context: .
      dockerfile: Dockerfile.authz
    expose:
      - 5000
    tty: true
    networks:
      app-network:
        ipv4_address: 172.22.0.6
  nginx:
    image: nginx:latest
    container_name: nginx
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
    restart: always
    depends_on:
      - authz
    networks:
      app-network:
        ipv4_address: 172.22.0.5
    volumes:
      - nginx_log:/var/log/nginx
      - ./data/certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot/:ro
  certbot:
    container_name: certbot
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt:rw
      - ./certbot/www/:/var/www/certbot/:rw
#      - certbot_log:/var/log/letsencrypt
    command: certonly --webroot --webroot-path /var/www/certbot/ --email esa.authz@smodata.net --no-eff-email --agree-tos --dry-run -d esa.authz.smodata.net
    networks:
      app-network:
        ipv4_address: 172.22.0.7
networks:
  app-network:
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/16
          gateway: 172.22.0.1

volumes:
  nginx_log:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /var/log/nginx_logs
#  certbot_log:
#    driver: local
#    driver_opts:
#      o: bind
#      type: none
#      device: /var/log/certbot_logs
